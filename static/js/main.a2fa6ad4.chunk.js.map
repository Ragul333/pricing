{"version":3,"sources":["card.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","className","type","costpermonth","users","storage","access","projects","support","domain","reports","App","pricing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2fa6ad4.chunk.js","sourcesContent":["\r\nimport './Style.css';\r\nimport { IoMdCheckmark } from 'react-icons/io'; \r\n\r\nimport { IoMdClose } from 'react-icons/io'; \r\nfunction Cards(props){\r\n    \r\n    return(\r\n        \r\n        <div className=\"col-sm-12 col-md-4\">\r\n        <div className=\"card bg-white mt-5\">\r\n         <div className=\"card-body\">\r\n         <h6 className=\"card-subtitle mb-2 text-muted text-center\">{props.type}</h6>\r\n         <h5 className=\"card-title text-center\">{props.costpermonth}</h5>\r\n        <hr></hr>\r\n        <p className=\"card-text\"><IoMdCheckmark/> {props.users}</p>\r\n        <p className=\"card-text\"><IoMdCheckmark/> {props.storage}</p>\r\n        <p className=\"card-text\"><IoMdCheckmark/> {props.access}</p>\r\n        \r\n        <p className=\"card-text\"><IoMdCheckmark/> {props.projects}</p>\r\n        <p className=\"card-text\"><IoMdCheckmark/> {props.support}</p>\r\n        <p className=\"card-text\"><IoMdClose/> {props.domain}</p>\r\n        <p className=\"card-text\"><IoMdClose/> {props.reports}</p>\r\n        <center><button className=\"btn btn-primary mt-2\">BUTTON</button></center>\r\n         </div>\r\n        </div>\r\n        </div>\r\n        \r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Cards;","import Cards from './card';\n\n\nfunction App() {\n  let pricing = [\n    {\n      type:'FREE',\n      costpermonth:'$0/month',\n      users:'Single User',\n      storage:`5GB storage`,\n      access:'Community Access',\n      projects:'Unlimited Private Projects',\n      support:'Dedicated Phone Support',\n      domain:'Free Subdomain',\n      reports:'Monthly Status Reports'\n    },\n    {\n      type:'PLUS',\n      costpermonth:'$9/month',\n      users:'5 Users',\n      storage:'50GB storage',\n      access:'Community Access',\n      projects:'Unlimited Private Projects',\n      support:'Dedicated Phone Support',\n      domain:'Free Subdomain',\n      reports:'Monthly Status Reports'\n\n    }\n    ,\n    {\n      type:'PRO',\n      costpermonth:'$49/month',\n      users:'Unlimited Users',\n      storage:'150GB storage',\n      access:'Community Access',\n      projects:'Unlimited Private Projects',\n      support:'Dedicated Phone Support',\n      domain:'Unlimited Free Subdomains',\n      reports:'Monthly Status Reports'\n\n    }\n  ]\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n    <Cards\n      type={pricing[0].type}\n      costpermonth={pricing[0].costpermonth}\n      users={pricing[0].users}\n      storage={pricing[0].storage}\n      access={pricing[0].access}\n      projects={pricing[0].projects}\n      support={pricing[0].support}\n      domain={pricing[0].domain}\n      reports={pricing[0].reports}\n    ></Cards>\n     <Cards\n      type={pricing[1].type}\n      costpermonth={pricing[1].costpermonth}\n      users={pricing[1].users}\n      storage={pricing[1].storage}\n      access={pricing[1].access}\n      projects={pricing[1].projects}\n      support={pricing[1].support}\n      domain={pricing[1].domain}\n      reports={pricing[1].reports}\n    ></Cards>\n     <Cards\n      type={pricing[2].type}\n      costpermonth={pricing[2].costpermonth}\n      users={pricing[2].users}\n      storage={pricing[2].storage}\n      access={pricing[2].access}\n      projects={pricing[2].projects}\n      support={pricing[2].support}\n      domain={pricing[2].domain}\n      reports={pricing[2].reports}\n    ></Cards>\n       </div> \n      </div>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap-grid.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}